# Define um "upstream" que aponta para a sua API.
# 'upstream' é um grupo de servidores que o Nginx pode contactar.
upstream webapp_api {
    # 'api:8080' é a chave aqui.
    # 'api' é o nome do seu serviço de aplicação no docker-compose.yml.
    # O Docker usa este nome para resolver o IP interno do container da API.
    # '8080' é a porta HTTP que a sua API expõe dentro da rede do Docker.
    server api:8080;
}

# --------------------------------------------------------------------
# Servidor para HTTPS (porta 443) - Permanece igual
# --------------------------------------------------------------------
server {
    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /etc/nginx/certs/nginx.crt;
    ssl_certificate_key /etc/nginx/certs/nginx.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
        proxy_pass http://webapp_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# --------------------------------------------------------------------
# Servidor para HTTP (porta 80) - MODIFICADO
# --------------------------------------------------------------------
server {
    listen 80;
    listen [::]:80;

    # ALTERAÇÃO PRINCIPAL:
    # Em vez de redirecionar, este bloco agora também atua como um proxy,
    # tal como o bloco HTTPS.
    location / {
        proxy_pass http://webapp_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}