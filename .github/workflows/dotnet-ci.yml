name: .NET CI/CD

# Controla quando o workflow será executado
on:
  # Dispara no push para a branch 'master'
  push:
    branches: [ "master" ]
  # Dispara na abertura de Pull Request para a branch 'master'
  pull_request:
    branches: [ "master" ]
  # Permite a execução manual a partir da aba Actions
  workflow_dispatch:
# ----------------------------------------------------------------------------------------#
 
jobs:
  build-test-publish:
    name: Build, Test and Publish
    runs-on: ubuntu-latest # máquina virtual Linux do GitHub

    permissions:
      contents: read
      packages: write

    steps:
    # 1. Baixar o código do seu repositório para a máquina virtual
    - name: Checkout repository
      uses: actions/checkout@v4

    # --- INÍCIO DA FASE DE CI ------------------------------------------------------------
    # 2. Configurar o ambiente .NET
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0'

    # 3. Restaurar as dependências do projeto
    - name: Restore dependencies
      run: dotnet restore ./src/WebAppDockerTeste/WebAppDockerTeste.csproj

    # 4. Compilar o projeto
    - name: Build
      run: dotnet build ./src/WebAppDockerTeste/WebAppDockerTeste.csproj --no-restore
    # -------------------------------------------------------------------------------------

    # --- INÍCIO DA FASE DE CD ------------------------------------------------------------
    # 6. Converte o nome do repositório para minúsculas para a tag do Docker
    - name: Convert repository name to lowercase
      id: string
      run: echo "repo=${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT

    # 7. Login no GitHub Container Registry
    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # 8. Construir e publicar a imagem Docker
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./src/WebAppDockerTeste
        file: ./src/WebAppDockerTeste/Dockerfile
        push: true
        tags: ghcr.io/${{ steps.string.outputs.repo }}:${{ github.sha }}
    # -------------------------------------------------------------------------------------
